Digital & Technology Solutions
Degree Apprenticeship
QAC020N227S
Software Engineering & Agile
Level 5 
20 credits
Written by: 			Suraksha Neupane 
Checked by:			 
Programme Leader Approval:	Francis Braithwaite
UoR Approval:			TBC
Approved for 			Single / Multiple Use:
Review (Multiple Use):	12 months from creation
Assessment Brief

This assessment brief includes the Coursework Section of the Assessment for your module.  Where a module has multiple components, these are listed below. It will provide outline details of the examination and specific instructions for any coursework elements. 


Submission Details

Component
Date
Time
Assignment
Friday of Week 10 – Details on VLE Submission Point
14:00

Module Learning Outcome Assessment Matrix

Learning Outcomes
Task 1
Task 2
Task 3
Build a non-trivial web application from a given business idea.
ü


Appraise the programming concepts and syntax used to build a non-trivial web application. 


ü

Apply an Agile systems development approach to the building of a non-trivial application. 

ü

Critique the key skills, tools and techniques, roles and responsibilities that support the systems development process.


ü


Section 1: 
Web Development Project
Coding Specification

Instructions
Please carefully read the full Assessment Brief including the Marking Rubric before starting your assignment and to check with your tutor, if necessary, to ensure that you have fully understood what is required.

Requirements 
You are required to design, develop, and test a web database application in Python. Any framework of your choice can be used – Flask, Django, FastAPI. Describe the programming concepts and syntax used. Assume that an Agile Approach is to be used to develop a web application project and describe its use.

The application should be focused on a topic that is either relevant to your job role and/or company or something you are interested in. The application could be used to handle IT Assets, Contacts, Help Desk Tickets, or Customer Information. To suit the brief, you may need to simplify your real data. Ask your tutor for help if you are unsure.

The web application should feature a small relational database(including  SQLite) that has minimum of two tables and maximum of four tables. For testing purposes, each table in the final database should contain 10 records. A variety of relevant data types should be included in table columns. Fields that can serve as the Primary and Foreign Keys should be included.  The web application should have two types of users/roles – admin, and regular. 
    • Both the users must register and login in order to use the web application. 
    • Users should be able to explore records from all the database tables. 
    • Admin users should have the ability to perform all CRUD (create, read, update, delete) operations on the database tables and make changes to the underlying database data. 
    • Regular users should have the ability to perform create, read and update operations only.

Validation should be implemented so that the user cannot conduct an invalid operation or enter data that is not in compliance with the field's requirements. When validation rules are broken, appropriate error messages should be displayed.

Guidelines
    • The web application should follow the core design rules of modularisation by breaking down the functionality into relevant components.
    • The source code of the web application should incorporate features that will improve the code quality and readability by applying basic programming rules such as appropriate naming conventions, indentation, comments, and refactoring. 
    • Usability of the web application should be considered. For example, after completing an activity, the user should be presented with an appropriate notification indicating whether their activity was successful or not. Also, before exiting the application or deleting a record, a confirmation should be presented to the user.

Task 1 Web Development Project (60%)

Description: Various development artefacts

Use the Python programming language and an appropriate framework, IDE, DBMS to build and test a web application based on an agile software development approach that satisfies the criteria detailed in the requirements and guidelines section above. 

Evidence required: 
    A. Report:	Word count: 500 words
    • A summary/explanation of the application and any dependencies- Problem statement, scope of the application, design documents
    • If two or more tables are related, then an Entity Relationship Diagram (ERD) would be required to show the defined entities, their attributes, and relationships between the tables. 
    • Instruction on running the application-This could be included in a read me text document
    • Annotated Screenshots of the running application
    • User manual of the key features
    B. Application:	

    • A Source code that can be submitted in any of the following options:
    • Option 1: A URL to an online source control repository such as GitHub.
    • Option 2: A zip file of all coding artefacts, including the database. 
    • A running web application hosted on a free public cloud platform such as Heroku, AWS or Azure etc.

Task 2 - Report I: Web Application Development (10%)
Description: description of the web application development 
Word count: 500 words

Explain 3 different elements you used (or could have used) based on an agile framework in the development of your web application. Explain what each of the elements does, how you may have used it and where possible provide evidence of its use in your web application development. 
Evidence required:
    • A brief explanation of the web development project and artefacts.
    • Evidence of artefacts used (indicate the option chosen to submit the source code).


Task 3 - Report II: Agile Overview (20%)	
Description: description of an agile approach to IT/software development 
Word count: 1000 words

Select a framework of Agile software development approach that is of interest to you and your organization. Reason for the selection of a particular framework could be based on any of the following aspects.
    I. running IT/software development projects
    II. running IT/software development teams (including roles and responsibilities of team members)
    III. measuring IT/software development operations and tasks
    IV. automating IT/software development operations and tasks. 

    • Compare, contrast, and critically evaluate the chosen framework against 2 other Agile software development framework such as SCRUM, KANBAN, LEAN, etc.  Ensure that you cover all the important features of agile project development principles that relates to the framework you have chosen. 

    • Propose an improvement to the chosen agile development approach in a way that would benefit your organisation. Suggest ways of implementing your proposed improvement. 

Academic Convention (10%)
Up to 10 marks can be awarded for the entire task for the overall structure, strength of argument, referencing and use of language including the use of the Harvard Referencing Style identified in the "Cite Them Right" Text from the virtual library. For an excellent performance, your work will be based on qualities and relevant resources.
	
All submissions must have a completed Cover Sheet (see Appendix A) attached to your submission.

The submission entails creating a report that includes addressing a set of pre-determined questions. Your ability to answer the questions, your comprehension of the topic, and critical evaluation of the project, as well as your choice of approaches and tools, will be evaluated in the report.

To avoid duplication of logic, your application code and related artefacts should follow secure programming practices such as naming conventions, indentation, comments, and refactoring. Screenshots and messages should be well-designed, with consistent formatting. The supporting documentation and report should be properly presented as well, with consistent formatting, diagrams, and screenshots as needed, as well as correct spelling, punctuation, and grammar. It should at the very least include:
    • A fully completed Cover Sheet including correct word count - See Appendix A
    • A Table of Contents
    • A Bibliography/list of any references that were cited in your report. Relevant references should be cited and formatted using the "Cite them right” referencing guide available via the virtual library. 
    • A bibliography/list of any references cited in the code should be included with your website code. Relevant code references should be cited and formatted using the "Cite them right” referencing guide available via the virtual library. 

Section 2 General Assessment Brief Guidance

Supporting Assessment documentation, rules and regulations. 

To view the academic rules and guidance documents for the topics listed below please follow this link to the Degree Apprenticeship Handbook (DAH) module in Canvas: https://canvas.qa.com/courses/1041

If you are unable to access this module, please contact qaadegreeadmin@qa.com who will be able to resolve this for you.

The guidance found in the DAH includes:

    • University of Roehampton Academic Regulations
    • Regulations & Quality Assurance Overview
    • Key contacts
    • Mitigating Circumstance documentation
    • Academic misconduct Procedure
    • Final degree award calculation
    • Appeals guidance
    • Examination regulations
    • Student feedback committees
    • External examiner reports

Marking Rubric

Task 1

Criteria
Outstanding
80% -100%
Excellent
70% - 79% 
Very Good
60% - 69%
Good
50% - 59%
Pass
40% - 49%
Poor
0% - 39%
Task 1
Develop web database Application 


An outstanding web application that meets or surpasses all requirements and guidelines. The code adheres to SOLID principles. Usability has been taken into consideration. The code has been refactored to eliminate duplication. All data is validated to the highest standard, and error logging is handled in a model manner. Data storage and retrieval have been implemented correctly. Report includes clear problem statement and all the necessary design documents.
An excellent web application that executes and meets all requirements and guidelines.
The code is excellently modularised and utilises both files and functions in an almost flawless manner.
Usability has been excellently considered with thorough attention to detail.
Code is excellently refactored with little duplication.
Validation of all data is almost flawless with appropriate error logging being carried out. 
The storage and retrieval of data have been implemented excellently. Report includes clear problem statement and all the necessary design documents.
A very good web application that executes and meets most requirements and guidelines.
The code has been very well modularised and utilises both files and functions in a very good way.
Usability has been very well thought through with very good attention to detail.
Code has been well refactored with moderate duplication.
Validation of most data has been very well carried out as has the logging of errors
The storage and retrieval of data have been very well implemented. Report includes clear problem statement and all the necessary design documents.
A good web application that executes and meets key requirements and guidelines.
The code has been well modularised and utilises functions in a well thought out way.
Usability has been well thought through with good attention to detail.
There is some evidence of refactoring but there are areas of logic that need attention.
Validation of data and error logging has generally been well carried out but there are some gaps.
The storage and retrieval of data have been well implemented with few problems. Report includes clear problem statement and all the necessary design documents.
A basic web application that executes and meets some requirements and guidelines.
There has been some attempt at modularisation, but more could be done.
Usability is lacking with some limited messaging.
There is little evidence of refactoring.
Some validation of data and error logging has been done but there are some significant gaps.
An attempt has been made at the storage and retrieval of data but there are significant issues. Report misses important details about the web application.
A poor web application that may or may not run and only meets a few or none of the standards and guidelines. There is little or no attempt to apply modularization and object-oriented programming principles to coding. Usability is lacking with little or no messaging. There is no indication of refactoring in the program. Data validation and error logging have received little or no attention. Data storage and retrieval have received little or no attention.
User interface is not easy to understand. Application not deployed full. Report not complete.
60 Marks
48 - 60
42 - 47
36 - 41
30 - 35
24 - 29
0 - 23

Task 2 (Report on Web Development and Supporting Artefacts)

Criteria
Outstanding
80% -100%
Excellent
70% - 79% 
Very Good
60% - 69%
Good
50% - 59%
Pass
40% - 49%
Poor
0% - 39%
Task 2 (Web Development and Supporting Artefacts Report)
 [10 Marks]

An outstanding description of all three agile elements used in the web application and the set of all supporting artefacts that exceeds all requirements.
An excellent description of all three agile elements used in the web application and the set of supporting artefacts that meets all requirements.
A very good description of all three agile elements used in the web application and set of supporting artefacts that meets most requirements.
A good description of all three agile elements used in the web application and the set of supporting artefacts that meets key requirements.
A basic description of all three agile elements used in the web application and the set of supporting artefacts that meets some requirements. 
A poor description of all three agile elements used in the web application and the set of supporting artefacts that meets few or no requirements.
10 marks 
8 - 10 marks
7 marks
6 marks
5 marks
4 marks
0 - 3 marks


Task 3 (Report on Agile Overview) 

Criteria
Outstanding
80% -100%
Excellent
70% - 79% 
Very Good
60% - 69%
Good
50% - 59%
Pass
40% - 49%
Poor
0% - 39%
Task 3 (Report on Agile Overview)
[20 marks]
An outstanding discussion to compare, contrast, and critically evaluate the essential features of your chosen framework against 2 other Agile software development framework with an Agile software development standard (e.g., SCRUM, KANBAN, LEAN). An outstanding discussion of a proposed approach to address the challenges and/or areas of improvement in the approach used in your organisation and recommendations to implement your proposed approach in a way that would benefit your organization.

An excellent discussion to compare, contrast, and critically evaluate the essential features of your chosen framework against 2 other Agile software development framework with an Agile software development standard (e.g., SCRUM, KANBAN, LEAN). An excellent discussion of a proposed approach to address the challenges and/or areas of improvement in the approach used in your organisation and recommendations to implement your proposed approach in a way that would benefit your organization.

A very good discussion to compare, contrast, and critically evaluate the essential features of your chosen framework against 2 other Agile software development framework with an Agile software development standard (e.g., SCRUM, KANBAN, LEAN). A very good discussion of a proposed approach to address the challenges and/or areas of improvement in the approach used in your organisation and recommendations to implement your proposed approach in a way that would benefit your organization.

A good discussion to compare, contrast, and critically evaluate the essential features of your chosen framework against 2 other Agile software development framework with an Agile software development standard (e.g., SCRUM, KANBAN, LEAN). A good discussion of a proposed approach to address the challenges and/or areas of improvement in the approach used in your organisation and recommendations to implement your proposed approach in a way that would benefit your organization.

A basic discussion to compare, contrast, and critically evaluate the essential features of your chosen framework against 2 other Agile software development framework with an Agile software development standard (e.g., SCRUM, KANBAN, LEAN). A basic discussion of a proposed approach to address the challenges and/or areas of improvement in the approach used in your organisation and recommendations to implement your proposed approach in a way that would benefit your organization.

A poor discussion to compare, contrast, and critically evaluate the essential features of your chosen framework against 2 other Agile software development framework with an Agile software development standard (e.g., SCRUM, KANBAN, LEAN). A poor discussion of a proposed approach to address the challenges and/or areas of improvement in the approach used in your organisation and no or few recommendations to implement your proposed approach in a way that would benefit your organization.
 
20 marks
16 – 20 marks
14 -15 marks
12 -13 marks
10 - 11 marks
8 – 9 marks
0 – 7 marks

Academic Conventions

Criteria
Outstanding
80% -100%
Excellent
70% - 79% 
Very Good
60% - 69%
Good
50% - 59%
Pass
40% - 49%
Poor
0% - 39%
Academic Conventions
[10 marks]
An outstanding presentation of application code, artefacts, output, documentation and report that exceeds requirements.
An extensive range of relevant literature and online resources are used to inform work.
Faultless accurate and assured use of academic conventions.
An excellent presentation of application code, artefacts, output, documentation and report that meets all requirements
A wide range of relevant literature and online resources are used to inform work.
Consistently accurate and assured use of academic conventions.
A very good presentation of application code, artefacts, output, documentation and report that meets most requirements
A broad range of relevant literature and online resources are used to inform work.
Mostly accurate and assured use of academic conventions but with some minor errors.
A good presentation of application code, artefacts, output, documentation and report that meets key requirements.
A general range of relevant literature and online resources are used to inform work.
Generally accurate and assured use of academic conventions but with some key errors.
A basic presentation of application code, artefacts, output, documentation and report that meets some requirements.
A limited range of relevant literature and online resources are used to inform work.
Some accurate and assured use of academic conventions but with many errors.
Poor presentation of application code, artefacts, output, documentation and report that meets a few or none of the specified requirements.
Little or no use of relevant literature and online resources are used to inform work.
Little or no accurate and assured use of academic conventions with significant errors.
10 marks 
8 - 10 marks
7 marks
6 marks
5 marks
4 marks
0 - 3 marks









Appendix A (This must be the first page in your assignment report).


ASSIGNMENT COVER SHEET

Student’s name
(First name)

(Last name)
Module name

Title of assignment

Complete Word Count in my assignment


Date submitted



All work must be submitted by the due date.  If an extension of time to submit work is required, a Mitigating Circumstances Extension Form must be submitted. 
https://canvas.qa.com/courses/1041


Has an extension been approved?                Yes                No     	 If yes, please give the new submission date ….…/..…./…….


IMPORTANT: THIS STATEMENT MUST BE READ & SIGNED

Academic Integrity Statement

Academic integrity and honesty are fundamental to the academic work you produce at the University of Roehampton. You are expected to complete coursework that is your own and which is referenced appropriately. The university has in place measures to detect academic dishonesty in all its forms. If you are found to be cheating or attempting to gain an unfair advantage over other students in any way, this is considered academic misconduct and you will be penalised accordingly.
 ?
I declare that the work I am submitting is my work, is properly referenced and has not been submitted elsewhere.
   
Student Signature (Full Name): 

Date:



